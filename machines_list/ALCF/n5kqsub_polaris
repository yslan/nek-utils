#!/bin/bash
set -e

: ${PROJ_ID:="EnergyApps"} # debug, debug-scaling, prod https://docs.alcf.anl.gov/running-jobs/job-and-queue-scheduling/
: ${QUEUE:="prod"} # debug, debug-scaling, prod https://docs.alcf.anl.gov/running-jobs/job-and-queue-scheduling/

if [ $# -ne 3 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
  echo "Usage: [<env-var>] $0 <case name> <number of compute nodes> <hh:mm>"
fi

bin=./nek5000
case=$1
nodes=$2
time=$3
jobname="nek5000_"$case

if [ -z "$PROJ_ID" ]; then
  echo "ERROR: PROJ_ID is empty"
  exit 1
fi

time_fmt=`echo $time|tr ":" " "|awk '{print NF}'`
if [ "$time_fmt" -ne "2" ]; then
  echo "ERROR: <time> is not in the format <hh:mm>"
  echo $time
  exit 1
fi

if [ ! -f $bin ]; then
  echo "Cannot find" $bin
  exit 1
fi

numa_per_node=4
cores_per_numa=8

let cpu_per_node=$cores_per_numa*$numa_per_node
let nn=$nodes*$cpu_per_node
let ntasks=nn

#chk_case $ntasks

striping_unit=16777216
max_striping_factor=128
set +e; let striping_factor=$nodes/2; set -e
if [ $striping_factor -gt $max_striping_factor ]; then
  striping_factor=$max_striping_factor
fi
if [ $striping_factor -lt 1 ]; then
  striping_factor=1
fi

MPICH_MPIIO_HINTS="*:striping_unit=${striping_unit}:striping_factor=${striping_factor}:romio_cb_write=enable:romio_ds_write=disable:romio_no_indep_rw=true"

echo $case     >  SESSION.NAME
echo `pwd`'/' >>  SESSION.NAME

# sbatch
SFILE=s.bin
echo "#!/bin/bash" > $SFILE
echo "#PBS -A $PROJ_ID" >>$SFILE
echo "#PBS -N $jobname" >>$SFILE
echo "#PBS -q $QUEUE" >>$SFILE
echo "#PBS -l walltime=${time}:00" >>$SFILE
echo "#PBS -l filesystems=home:eagle:grand" >>$SFILE
echo "#PBS -l select=$nodes:system=polaris" >>$SFILE
echo "#PBS -l place=scatter" >>$SFILE
echo "#PBS -k doe" >>$SFILE #write directly to the destination, doe=direct, output, error
echo "#PBS -j eo" >>$SFILE  #oe=merge stdout/stderr to stdout

# job to “run” from your submission directory
echo "cd \$PBS_O_WORKDIR" >> $SFILE
echo "echo Jobid: \$PBS_JOBID" >>$SFILE
echo "echo Running on host \`hostname\`" >>$SFILE
echo "echo Running on nodes \`cat \$PBS_NODEFILE\`" >>$SFILE

echo "module use /soft/modulefiles" >> $SFILE
echo "module load PrgEnv-gnu" >> $SFILE
echo "module load spack-pe-base cmake" >> $SFILE
echo "module list" >> $SFILE

echo "ulimit -s unlimited " >>$SFILE

echo "export MPICH_MPIIO_HINTS=$MPICH_MPIIO_HINTS" >>$SFILE
echo "export MPICH_MPIIO_STATS=1" >>$SFILE

echo "export MPICH_OFI_NIC_POLICY=NUMA" >> $SFILE
echo "export OMP_NUM_THREADS=1" >> $SFILE

echo -e "\n# actual run" >>$SFILE
echo "mpiexec -n $ntasks -ppn $cpu_per_node -d 1 --cpu-bind depth $bin" >>$SFILE

qsub -q $QUEUE $SFILE

# clean-up
#rm -rf $SFILE $ROMIO_HINTS .lhelper
